<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
	http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.0.xsd">
	
	<!-- 加载数据库配置文件. -->
	<context:property-placeholder location="classpath:db.properties"/>
	
	<!-- 配置数据库连接池 -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<!-- 此处的property的name值不可随便更改，必须是以下名称 -->
		<property name="driverClassName" value="${jdbc.driver}"></property>
		<property name="url" value="${jdbc.url}"></property>
		<property name="username" value="${jdbc.username}"></property>
		<property name="password" value="${jdbc.password}"></property>
		<property name="maxActive" value="10"></property>
		<property name="maxIdle" value="5"></property>
	</bean>
	
	<!-- mybatis的工厂. 此处的class名直接从 mybatis-spring-xxx.jar下的org.mybatis.spring下拷贝SqpSessionFactoryBean的类名称-->
	<bean id="sqlSessionFactoryBean" class="org.mybatis.spring.SqlSessionFactoryBean">
		<!-- 注入数据库连接池 -->
		<property name="dataSource" ref="dataSource"></property>
		
		<!-- mybatis核心配置文件的位置 -->
		<property name="configLocation" value="classpath:sqlMapConfig.xml"></property>
	</bean>
	
	<!-- 方式1：手动实例化DAO,原始的开发 -->
	<bean id="userDAO" class="com.zrxjuly.mybatis.dao.UserDAOImpl">
		<property name="sqlSessionFactory" ref="sqlSessionFactoryBean"></property>
	</bean>
	
	<!-- 方式2：使用Mapper动态代理开发 -->
	<!-- <bean id="userMapper" class="org.mybatis.spring.mapper.MapperFactoryBean">
		注入mybatis的工厂
		<property name="sqlSessionFactory" ref="sqlSessionFactoryBean" />
		<property name="mapperInterface" value="com.zrxjuly.mybatis.mapper.UserMapper"></property>
	</bean> -->

	<!-- 方式3：扫描   Mapper动态代理开发 -->	
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<!-- 基本包  扫描的是基础包下的类文件.-->
		<property name="basePackage" value="com.zrxjuly.mybatis.mapper"></property>
	</bean>
</beans>